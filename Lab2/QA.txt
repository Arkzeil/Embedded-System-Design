5.1 What are the cmake and make for? What is the relationship between them?
	make:智能的批处理工具，它本身并没有编译和链接的功能，通过调用makefile文件中用户指定的命令来进行编译和链接的
	cmake:简单的生成makefile文件给上面那个make用，可以跨平台生成对应平台能用的makefile。根据一个叫CMakeLists.txt文件（学名：组态档）去生成makefile

5.2 Why there are so many arguments in the compilation command(step 4.4.2)? What are they for?

5.3 What is libopencv_world.so.3.4.7 for? Why do we need to use LD_LIBRARY_PATH=. ./demo to run the 
executable? What would happen if we just run with ./demo? Why?

5.4 It is so complex and difficult to show a picture by using the framebuffer. Why don’t we just use cv::imshow() to do 
this work?

5.5 What is a framebuffer?
	framebuffer是一块内存，里面存放着一帧图像，每帧图像包含每个像素颜色值。BPP，像素深度，指存储每个像素所用的位数。内容对应于屏幕上的界面显示
	Framebuffer就是一段存储空间，其可以位于显存，也可以位于内存。只要是在GPU能够访问的空间范围内(GPU的物理地址空间)，任意分配一段内存(或显存)，都可以作为Framebuffer使用

5.6 What is the result of the command below? Why?
sudo cat /dev/fb0 > fb0
sudo cat fb0 > /dev/fb0

5.7 You can find there is a file named fb1 under /dev directory. What is the difference between /dev/fb0 and /dev/fb1? 
Why we use /dev/fb0 rather than /dev/fb1?